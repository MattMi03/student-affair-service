<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.qhjy.student.mapper.ClassManagerMapper">

    <resultMap id="ClassVOResultMap" type="edu.qhjy.student.vo.ClassVO">
        <result column="szsdm" property="szsdm"/>
        <result column="szsmc" property="szsmc"/>
        <result column="kqdm" property="kqdm"/>
        <result column="xxdm" property="xxdm"/>
        <result column="kqmc" property="kqmc"/>
        <result column="xxmc" property="xxmc"/>
        <result column="bjbs" property="bjbs"/>
        <result column="bjmc" property="bjmc"/>
        <result column="jb" property="jb"/>
        <result column="bzrxm" property="bzrxm"/>
        <result column="bjlx" property="bjlx"/>
        <result column="ysyz" property="ysyz"/>
    </resultMap>

    <select id="selectList" parameterType="edu.qhjy.student.dto.classmanager.ClassQueryDTO"
            resultMap="ClassVOResultMap">
        SELECT
        szs.DM AS szsdm,
        k.DM AS kqdm,
        s.DM AS xxdm,
        s.MC AS xxmc,
        b.BJBS AS bjbs,
        b.BJMC AS bjmc,
        b.JB AS jb,
        b.BZRXM AS bzrxm,
        b.BJLX AS bjlx,
        b.YSYZ AS ysyz,
        b.MZYYSKYZ AS mzyyskyz,
        szs.MC AS szsmc,
        k.MC AS kqmc,
        COALESCE(COUNT(ks.KSH), 0) AS bjrs -- ✅ 班级人数

        FROM
        BJXX b
        LEFT JOIN KSXX ks ON ks.BJBS = b.BJBS
        JOIN XYZDK s ON b.XXDM = s.DM AND s.JH = 'ZX'
        JOIN XYZDK k ON b.XXDM LIKE k.DM || '%' AND k.JH = 'KD'
        JOIN XYZDK szs ON b.XXDM LIKE szs.DM || '%' AND szs.JH = 'KQ'

        <where>
            <if test="permissionDm != null and permissionDm != '' and permissionDm != 'qhs'">
                AND b.XXDM LIKE CONCAT(#{permissionDm}, '%')
            </if>
            <if test="jbny != null">AND b.JB = #{jbny}</if>
            <if test="xxdm != null and xxdm != ''">AND s.DM = #{xxdm}</if>
            <if test="kqdm != null and kqdm != ''">AND k.DM = #{kqdm}</if>
            <if test="szsdm != null and szsdm != ''">AND szs.DM = #{szsdm}</if>
        </where>

        GROUP BY
        szs.DM, k.DM, s.DM, s.MC,
        b.BJBS, b.BJMC, b.JB, b.BZRXM, b.BJLX, b.YSYZ, b.MZYYSKYZ, szs.MC, k.MC

        ORDER BY
        s.DM, b.JB, b.BJMC
    </select>

    <select id="selectById" parameterType="java.lang.Long" resultType="edu.qhjy.student.domain.Bjxx">
        SELECT *
        FROM bjxx
        WHERE BJBS = #{id}
    </select>

    <insert id="insert" parameterType="edu.qhjy.student.domain.Bjxx" useGeneratedKeys="true" keyProperty="bjbs">
        INSERT INTO bjxx (BJMC, XXDM, jb, BZRGZRYM, BZRXM, BJLX, YSYZ, MZYYSKYZ)
        VALUES (#{bjmc},
                #{xxdm},
                #{jb},
                #{bzrgzrym},
                #{bzrxm},
                #{bjlx},
                #{ysyz},
                #{mzyyskyz})
    </insert>

    <update id="updateById" parameterType="edu.qhjy.student.domain.Bjxx">
        UPDATE bjxx
        <set>
            <if test="bjmc != null">BJMC = #{bjmc},</if>
            <if test="jb != null">jb = #{jb},</if>
            <if test="bzrxm != null">BZRXM = #{bzrxm},</if>
            <if test="bjlx != null">BJLX = #{bjlx},</if>
            <if test="ysyz != null">YSYZ = #{ysyz},</if>
            <if test="mzyyskyz != null">MZYYSKYZ = #{mzyyskyz},</if>
        </set>
        WHERE BJBS = #{bjbs}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE
        FROM bjxx
        WHERE BJBS = #{id}
    </delete>

    <select id="findStudentByClassId" resultType="edu.qhjy.student.vo.StudentForClassVO">
        SELECT ksh,
               sfzjh,
               xm,
               bjmc
        FROM ksxx
        where bjbs = #{bjbs}
    </select>

    <select id="findAvailableStudentByClassId"
            parameterType="edu.qhjy.student.dto.classmanager.StudentAvailableQueryDTO"
            resultType="edu.qhjy.student.vo.StudentForClassVO">
        SELECT
        ks.KSH,
        ks.SFZJH,
        ks.XM,
        ks.BJMC
        FROM
        ksxx ks
        INNER JOIN
        bjxx bj ON ks.JB = bj.JB AND ks.XXDM = bj.XXDM
        INNER JOIN
        xyzdk xx ON ks.XXDM = xx.DM AND xx.JH = 'ZX'
        <where>
            AND bj.BJBS = #{bjbs}
            AND ks.KJZTMC = '正常在校'

            <if test="ksh != null and ksh != ''">
                AND ks.KSH LIKE CONCAT('%', #{ksh}, '%')
            </if>
            <if test="sfzjh != null and sfzjh != ''">
                AND ks.SFZJH LIKE CONCAT('%', #{sfzjh}, '%')
            </if>
            <if test="xm != null and xm != ''">
                AND ks.XM LIKE CONCAT('%', #{xm}, '%')
            </if>
        </where>
    </select>

    <update id="clearStudentsFromClass" parameterType="long">
        UPDATE ksxx
        SET BJBS = NULL,
            BJMC = NULL
        WHERE BJBS = #{bjbs}
    </update>

    <select id="getBjmcAndJbByBjbs" resultType="edu.qhjy.student.dto.classmanager.BjxxDTO" parameterType="long">
        SELECT BJMC, JB, XXDM
        FROM bjxx
        WHERE BJBS = #{bjbs}
    </select>

    <update id="updateStudentBjbs" parameterType="map">
        UPDATE ksxx
        <set>
            BJBS = #{bjbs},
            BJMC = #{bjmc},
            JB = #{jb}
        </set>
        WHERE KSH IN
        <foreach item="ksh" collection="kshList" open="(" separator="," close=")">
            #{ksh}
        </foreach>
    </update>

    <select id="selectByXxmcAndBjmc" resultType="edu.qhjy.student.domain.Bjxx" parameterType="map">
        SELECT bj.*
        FROM bjxx bj
                 LEFT JOIN xyzdk xx ON bj.XXDM = xx.DM
        WHERE xx.MC = #{xxmc}
          AND bj.BJMC = #{bjmc}
    </select>

    <select id="findByXxdmAndBjmc" resultType="edu.qhjy.student.domain.Bjxx">
        SELECT *
        FROM bjxx
        WHERE XXDM = #{xxdm}
          AND BJMC = #{bjmc}
        LIMIT 1
    </select>

    <select id="findSchoolByXxdm" resultType="int">
        SELECT count(*)
        from xyzdk
        where dm = #{xxdm}
    </select>

    <select id="findClassesBySchoolAndNameBatch" resultType="edu.qhjy.student.domain.Bjxx">
        SELECT *
        FROM bjxx
        WHERE (XXDM, BJMC) IN
        <foreach collection="pairs" item="pair" open="(" separator="," close=")">
            (#{pair.xxdm}, #{pair.bjmc})
        </foreach>
    </select>

    <select id="findStudentsByKshList" resultType="edu.qhjy.student.domain.Ksxx" parameterType="java.util.List">
        SELECT *
        FROM ksxx
        WHERE ksh IN
        <foreach collection="list" item="ksh" open="(" separator="," close=")">
            #{ksh}
        </foreach>
    </select>

    <update id="removeStudentsFromClass" parameterType="list">
        UPDATE ksxx
        SET BJBS = NULL,
        BJMC = NULL
        WHERE KSH IN
        <foreach collection="list" item="ksh" open="(" separator="," close=")">
            #{ksh}
        </foreach>
    </update>

    <select id="findStudentsForClassAssignmentTemplate"
            resultType="edu.qhjy.student.dto.classmanager.ClassAssignmentData">
        SELECT KSH,
               XM,
               SFZJH,
               JB
        FROM ksxx
        WHERE XXDM = #{xxdm}
          AND JB = #{jb}
          AND KJZTMC = '正常在校'
        ORDER BY BJMC, KSH
    </select>

    <select id="findSchoolNameByCode" resultType="java.lang.String" parameterType="string">
        SELECT MC
        FROM xyzdk
        WHERE DM = #{xxdm}
          AND JH = 'ZX'
    </select>
</mapper>