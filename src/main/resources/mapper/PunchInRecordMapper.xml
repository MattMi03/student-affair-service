<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.qhjy.punchin.mapper.PunchInRecordMapper">

    <select id="findPlanBySemesterAndSchool" resultType="edu.qhjy.punchin.domain.Dkjh">
        SELECT *
        FROM dkjh
        WHERE XNMC = #{xnmc}
          AND XXDM = #{xxdm}
        LIMIT 1
    </select>

    <insert id="batchInsertRecordsIgnoreDuplicates">
        <foreach collection="list" item="item" separator=";">
            MERGE INTO dkjl T
            USING (
            SELECT #{item.dkjhbs} AS DKJHBS,
            #{item.dkrq} AS DKRQ,
            #{item.ksh} AS KSH,
            #{item.dksj} AS DKSJ,
            #{item.dksb} AS DKSB,
            #{item.dkdd} AS DKDD,
            SYSDATE AS CJSJ
            FROM dual
            ) S
            ON (T.KSH = S.KSH AND T.DKRQ = S.DKRQ)
            WHEN NOT MATCHED THEN
            INSERT (DKJHBS, DKRQ, KSH, DKSJ, DKSB, DKDD, CJSJ)
            VALUES (S.DKJHBS, S.DKRQ, S.KSH, S.DKSJ, S.DKSB, S.DKDD, S.CJSJ)
        </foreach>
    </insert>

    <select id="findPunchInTasksForPage" resultType="edu.qhjy.punchin.vo.PunchInRecordListVO">
        SELECT
        CASE
        WHEN qjjl.QJJLBS IS NOT NULL THEN '请假'
        WHEN dkjl.DKJLBS IS NOT NULL THEN '已打卡'
        ELSE '未打卡'
        END AS status,
        dates.PUNCH_DATE AS dkrq,
        dkjl.DKSJ AS dksj,
        dkjl.DKSB AS dksb,
        ks.XM AS xm,
        ks.KSH AS ksh,
        ks.SFZJH AS sfzjh,
        school.MC AS xxmc -- [REFACTORED]
        FROM dkjh plan
        -- [REFACTORED] START:
        JOIN XYZDK school ON school.DM = plan.XXDM AND school.JH = 'ZX'
        LEFT JOIN XYZDK area ON area.DM = SUBSTR(school.DM, 1, 2) AND area.JH = 'KD'
        -- [REFACTORED] END
        JOIN dkjh_dates dates ON plan.DKJHBS = dates.DKJHBS
        JOIN ksxx ks ON ks.XXMC = school.MC -- [REFACTORED]
        LEFT JOIN dkjl
        ON ks.KSH = dkjl.KSH
        AND dates.PUNCH_DATE = dkjl.DKRQ
        AND plan.DKJHBS = dkjl.DKJHBS
        LEFT JOIN qjjl
        ON qjjl.KSH = ks.KSH
        AND qjjl.DKJHBS = plan.DKJHBS
        AND dates.PUNCH_DATE BETWEEN qjjl.KSRQ AND qjjl.JSRQ
        AND qjjl.SHZT = '通过'
        <where>
            AND dates.PUNCH_DATE &lt;= CURDATE()
            AND ks.KJZTMC = '正常在校'
            <if test="xnmc != null and xnmc != ''">
                AND plan.XNMC = #{xnmc}
            </if>
            <if test="xxdm != null and xxdm != ''">
                AND plan.XXDM = #{xxdm}
            </if>
            <if test="(xxdm == null or xxdm == '') and kqdm != null and kqdm != ''">
                AND area.DM = #{kqdm} -- [REFACTORED]
            </if>
            <if test="jb != null and jb != ''">
                AND ks.JB = #{jb}
            </if>
            <if test="bjbs != null">
                AND ks.BJBS = #{bjbs}
            </if>
        </where>
        ORDER BY dates.PUNCH_DATE, ks.KSH
    </select>

    <select id="findSchoolCodesByKshList" resultType="java.util.Map">
        SELECT k.KSH, x.DM AS XXDM -- [REFACTORED]
        FROM ksxx k
        -- [REFACTORED]
        JOIN XYZDK x ON k.XXMC = x.MC AND x.JH = 'ZX'
        WHERE k.KSH IN
        <foreach collection="kshList" item="ksh" open="(" separator="," close=")">
            #{ksh}
        </foreach>
    </select>

    <select id="findPlansBySemesterAndSchools" resultType="edu.qhjy.punchin.domain.Dkjh">
        SELECT *
        FROM dkjh
        WHERE XNMC = #{xnmc}
        AND XXDM IN
        <foreach collection="xxdmList" item="xxdm" open="(" separator="," close=")">
            #{xxdm}
        </foreach>
    </select>

    <select id="findPlanDatesByPlanIds" resultType="java.util.Map">
        SELECT DKJHBS, PUNCH_DATE
        FROM dkjh_dates
        WHERE DKJHBS IN
        <foreach collection="planIds" item="planId" open="(" separator="," close=")">
            #{planId}
        </foreach>
        ORDER BY DKJHBS, PUNCH_DATE
    </select>

    <select id="findLeaveApplicationsForPage" resultType="edu.qhjy.punchin.vo.LeaveApplicationListVO">
        SELECT
        q.QJJLBS AS qjjlbs,
        q.KSH AS ksh,
        s.XM AS xm,
        s.SFZJH AS sfzjh,
        s.XXMC AS xxmc,
        q.KSRQ AS ksrq,
        q.JSRQ AS jsrq,
        q.SHZT AS shzt,
        q.SHYJ AS shyj,
        q.ZMCLLB AS zmcllb
        FROM
        qjjl q
        JOIN ksxx s ON q.KSH = s.KSH
        LEFT JOIN dkjh d ON q.DKJHBS = d.DKJHBS
        -- [REFACTORED] START:
        LEFT JOIN XYZDK school ON s.XXMC = school.MC AND school.JH = 'ZX'
        LEFT JOIN XYZDK area ON area.DM = SUBSTR(school.DM, 1, 2) AND area.JH = 'KD'
        -- [REFACTORED] END
        <where>
            <if test="xnmc != null and xnmc != ''">
                AND d.XNMC = #{xnmc}
            </if>
            <if test="kqdm != null and kqdm != ''">
                AND area.DM = #{kqdm} -- [REFACTORED]
            </if>
            <if test="xxdm != null and xxdm != ''">
                AND school.DM = #{xxdm} -- [REFACTORED]
            </if>
            <if test="jb != null">
                AND s.JB = #{jb}
            </if>
            <if test="bjbs != null">
                AND s.BJBS = #{bjbs}
            </if>
        </where>
        ORDER BY q.SQSJ DESC
    </select>

    <select id="findLeaveApplicationById" resultType="edu.qhjy.punchin.domain.Qjjl">
        SELECT *
        FROM qjjl
        WHERE QJJLBS = #{qjjlbs}
    </select>

    <insert id="insertLeaveApplication" parameterType="edu.qhjy.punchin.domain.Qjjl" useGeneratedKeys="true"
            keyProperty="qjjlbs">
        INSERT INTO qjjl (KSH, DKJHBS, QJSY, KSRQ, JSRQ, ZMCLLB, SHJD, SHZT, SQSJ)
        VALUES (#{ksh}, #{dkjhbs}, #{qjsy}, #{ksrq}, #{jsrq}, #{zmcllb}, '待审核', '待审核', NOW())
    </insert>

    <update id="updateLeaveApplication" parameterType="edu.qhjy.punchin.domain.Qjjl">
        UPDATE qjjl
        SET SHZT  = #{shzt},
            SHYJ  = #{shyj},
            SHRXM = #{shrxm},
            SHSJ  = #{shsj}
        WHERE QJJLBS = #{qjjlbs}
    </update>

    <select id="findSchoolCodeByStudentId" resultType="java.lang.String">
        SELECT xx.DM AS XXDM -- [REFACTORED]
        FROM XYZDK xx -- [REFACTORED]
                 JOIN ksxx ks ON xx.MC = ks.XXMC -- [REFACTORED]
        WHERE ks.KSH = #{ksh}
          AND xx.JH = 'ZX' -- [REFACTORED]
        LIMIT 1
    </select>


    <select id="findPunchInStats" resultType="edu.qhjy.punchin.vo.PunchInStatsVO">
        WITH
        daily_stats AS (
        SELECT
        ks.JB,
        plan.XNMC,
        school.DM AS XXDM,
        school.MC AS XXMC,
        area.MC AS KQMC,
        SUM(CASE WHEN dkjl.DKJLBS IS NOT NULL THEN 1 ELSE 0 END) AS attendance_person_days,
        COUNT(ks.KSH) AS total_person_days
        FROM
        (
        SELECT KSH, JB, XXMC, BJBS FROM ksxx WHERE KJZTMC = '正常在校'
        <if test="jb != null and jb != ''">AND JB = #{jb}</if>
        <if test="bjbs != null">AND BJBS = #{bjbs}</if>
        ) ks
        JOIN XYZDK school ON ks.XXMC = school.MC AND school.JH = 'ZX'
        LEFT JOIN XYZDK area ON area.DM = SUBSTR(school.DM, 1, 2) AND area.JH = 'KD'
        JOIN dkjh plan ON school.DM = plan.XXDM
        JOIN dkjh_dates dates ON plan.DKJHBS = dates.DKJHBS
        LEFT JOIN dkjl ON ks.KSH = dkjl.KSH AND dates.PUNCH_DATE = dkjl.DKRQ AND plan.DKJHBS = dkjl.DKJHBS
        -- [CORRECTED] 将所有筛选条件移入WHERE子句
        <where>
            dates.PUNCH_DATE &lt;= CURDATE()
            <if test="xxdm != null and xxdm != ''">
                AND school.DM = #{xxdm}
            </if>
            <if test="kqdm != null and kqdm != ''">
                AND area.DM = #{kqdm}
            </if>
            <if test="xnmc != null and xnmc != ''">
                AND plan.XNMC = #{xnmc}
            </if>
        </where>
        GROUP BY ks.JB, plan.XNMC, school.DM, school.MC, area.MC
        ),
        leave_stats AS (
        SELECT
        ks.JB,
        plan.XNMC,
        school.DM AS XXDM,
        COUNT(DISTINCT qjjl.QJJLBS) as leave_request_count
        FROM
        (
        SELECT KSH, JB, XXMC, BJBS FROM ksxx WHERE KJZTMC = '正常在校'
        <if test="jb != null and jb != ''">AND JB = #{jb}</if>
        <if test="bjbs != null">AND BJBS = #{bjbs}</if>
        ) ks
        JOIN XYZDK school ON ks.XXMC = school.MC AND school.JH = 'ZX'
        JOIN dkjh plan ON school.DM = plan.XXDM
        JOIN qjjl ON ks.KSH = qjjl.KSH AND plan.DKJHBS = qjjl.DKJHBS
        -- [CORRECTED] 将所有筛选条件移入WHERE子句
        <where>
            qjjl.SHZT = '通过'
            <if test="xxdm != null and xxdm != ''">
                AND school.DM = #{xxdm}
            </if>
            <if test="xnmc != null and xnmc != ''">
                AND plan.XNMC = #{xnmc}
            </if>
        </where>
        GROUP BY ks.JB, plan.XNMC, school.DM
        )
        SELECT
        ds.JB AS jb,
        ds.XNMC AS xnmc,
        ds.KQMC AS kqmc,
        ds.XXMC AS xxmc,
        ds.XXDM AS xxdm,
        ds.attendance_person_days AS attendanceCount,
        COALESCE(ls.leave_request_count, 0) AS leaveCount,
        (ds.total_person_days - ds.attendance_person_days) AS absenceCount
        FROM
        daily_stats ds
        LEFT JOIN
        leave_stats ls ON ds.JB = ls.JB AND ds.XNMC = ls.XNMC AND ds.XXDM = ls.XXDM
        ORDER BY
        jb, xnmc, kqmc, xxmc
    </select>

    <select id="findPunchInStatsDetail" resultType="edu.qhjy.punchin.vo.PunchInStatsDetailVO">
        SELECT
        ks.KSH,
        ks.XM,
        ks.SFZJH,
        ks.XXMC,
        ks.BJMC,
        dates.PUNCH_DATE AS dkrq,
        CASE
        WHEN qjjl.QJJLBS IS NOT NULL THEN '请假'
        ELSE '缺勤'
        END AS status
        FROM
        dkjh plan
        JOIN dkjh_dates dates ON plan.DKJHBS = dates.DKJHBS
        -- [REFACTORED]
        JOIN XYZDK school ON plan.XXDM = school.DM AND school.JH = 'ZX'
        JOIN ksxx ks ON school.MC = ks.XXMC -- [REFACTORED]
        LEFT JOIN dkjl ON ks.KSH = dkjl.KSH
        AND dates.PUNCH_DATE = dkjl.DKRQ
        AND plan.DKJHBS = dkjl.DKJHBS
        LEFT JOIN qjjl ON ks.KSH = qjjl.KSH
        AND dates.PUNCH_DATE BETWEEN qjjl.KSRQ AND qjjl.JSRQ
        AND qjjl.SHZT = '通过'
        <where>
            dates.PUNCH_DATE &lt;= CURDATE()
            AND ks.KJZTMC = '正常在校'
            AND dkjl.DKJLBS IS NULL
            <if test="xnmc != null and xnmc != ''">
                AND plan.XNMC = #{xnmc}
            </if>
            <if test="xxdm != null and xxdm != ''">
                AND school.DM = #{xxdm} -- [REFACTORED]
            </if>
            <if test="jb != null and jb != ''">
                AND ks.JB = #{jb}
            </if>
            <if test="bjbs != null">
                AND ks.BJBS = #{bjbs}
            </if>
        </where>
        ORDER BY dates.PUNCH_DATE DESC, ks.KSH
    </select>

</mapper>